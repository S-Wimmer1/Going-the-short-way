#LIM ... upper EL drive limit
LIM = 90.0 # constant

def python_path(az_d, el_d, az_t, el_t):
  #_d ... current drive coordinates -> parameter1+2
  #_t ... target coordinates -> parameter3+4
  #_r ... reverse-path coordinates -> calculate this
  #_g ... drive command coordinates -> return this
  
  # reverse path adjustment/calculation
  az_r = az_t - 180.0
  el_r = 180.0 - el_t
  
  # check if eligible
  if el_r > LIM:
    az_g = az_t
    el_g = el_t
  else:
    delta   = abs(abs(az_d - az_t) - abs(el_d - el_t))
    delta_r = abs(abs(az_d - az_r) - abs(el_d - el_r))  
  
    if delta_r <= delta:
      az_g = az_r
      el_g = el_r
    else:
      az_g = az_t
      el_g = el_t
  
  return az_g, el_g

az_g, el_g = python_path(az_d, el_d, az_t, el_t)

command_drive(az_g, el_g) # <- Schnittstelle Client
